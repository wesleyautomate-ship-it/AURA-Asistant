"""Consolidate models

Revision ID: 0eb8185a636d
Revises: 005_seed_aura_data
Create Date: 2025-09-29 16:42:05.425450

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0eb8185a636d'
down_revision: Union[str, Sequence[str], None] = '005_seed_aura_data'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brokerages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('license_number', sa.String(length=100), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('branding_config', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_brokerages_id'), 'brokerages', ['id'], unique=False)
    op.create_index(op.f('ix_brokerages_is_active'), 'brokerages', ['is_active'], unique=False)
    op.create_index(op.f('ix_brokerages_license_number'), 'brokerages', ['license_number'], unique=True)
    op.create_index(op.f('ix_brokerages_name'), 'brokerages', ['name'], unique=False)
    op.create_table('market_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('area', sa.String(length=100), nullable=False),
    sa.Column('property_type', sa.String(length=50), nullable=False),
    sa.Column('avg_price', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('price_per_sqft', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('market_trend', sa.String(length=20), nullable=True),
    sa.Column('data_date', sa.Date(), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('market_context', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_market_data_area'), 'market_data', ['area'], unique=False)
    op.create_index(op.f('ix_market_data_data_date'), 'market_data', ['data_date'], unique=False)
    op.create_index(op.f('ix_market_data_id'), 'market_data', ['id'], unique=False)
    op.create_index(op.f('ix_market_data_market_trend'), 'market_data', ['market_trend'], unique=False)
    op.create_index(op.f('ix_market_data_property_type'), 'market_data', ['property_type'], unique=False)
    op.create_table('neighborhood_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('area_name', sa.String(length=100), nullable=False),
    sa.Column('amenities', sa.JSON(), nullable=True),
    sa.Column('demographics', sa.JSON(), nullable=True),
    sa.Column('transportation_score', sa.Integer(), nullable=True),
    sa.Column('safety_rating', sa.Integer(), nullable=True),
    sa.Column('investment_potential', sa.String(length=20), nullable=True),
    sa.Column('average_rental_yield', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('population_density', sa.Integer(), nullable=True),
    sa.Column('average_age', sa.DECIMAL(precision=4, scale=1), nullable=True),
    sa.Column('family_friendly_score', sa.Integer(), nullable=True),
    sa.Column('nightlife_score', sa.Integer(), nullable=True),
    sa.Column('shopping_score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_neighborhood_profiles_area_name'), 'neighborhood_profiles', ['area_name'], unique=True)
    op.create_index(op.f('ix_neighborhood_profiles_id'), 'neighborhood_profiles', ['id'], unique=False)
    op.create_index(op.f('ix_neighborhood_profiles_investment_potential'), 'neighborhood_profiles', ['investment_potential'], unique=False)
    op.create_table('brand_assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brokerage_id', sa.Integer(), nullable=False),
    sa.Column('asset_type', sa.String(length=50), nullable=False),
    sa.Column('asset_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brokerage_id'], ['brokerages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_brand_assets_asset_type'), 'brand_assets', ['asset_type'], unique=False)
    op.create_index(op.f('ix_brand_assets_brokerage_id'), 'brand_assets', ['brokerage_id'], unique=False)
    op.create_index(op.f('ix_brand_assets_id'), 'brand_assets', ['id'], unique=False)
    op.create_table('lead_retention_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brokerage_id', sa.Integer(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=True),
    sa.Column('retention_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('touchpoints', sa.Integer(), nullable=True),
    sa.Column('conversion_probability', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('last_contact_date', sa.DateTime(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brokerage_id'], ['brokerages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lead_retention_analytics_brokerage_id'), 'lead_retention_analytics', ['brokerage_id'], unique=False)
    op.create_index(op.f('ix_lead_retention_analytics_id'), 'lead_retention_analytics', ['id'], unique=False)
    op.create_table('agent_consistency_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('brokerage_id', sa.Integer(), nullable=False),
    sa.Column('consistency_score', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('metrics', sa.Text(), nullable=True),
    sa.Column('period', sa.String(length=20), nullable=False),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['brokerage_id'], ['brokerages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_consistency_metrics_agent_id'), 'agent_consistency_metrics', ['agent_id'], unique=False)
    op.create_index(op.f('ix_agent_consistency_metrics_brokerage_id'), 'agent_consistency_metrics', ['brokerage_id'], unique=False)
    op.create_index(op.f('ix_agent_consistency_metrics_id'), 'agent_consistency_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_agent_consistency_metrics_period'), 'agent_consistency_metrics', ['period'], unique=False)
    op.create_table('client_nurturing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brokerage_id', sa.Integer(), nullable=False),
    sa.Column('sequence_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('steps', sa.Text(), nullable=True),
    sa.Column('triggers', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brokerage_id'], ['brokerages.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_nurturing_brokerage_id'), 'client_nurturing', ['brokerage_id'], unique=False)
    op.create_index(op.f('ix_client_nurturing_id'), 'client_nurturing', ['id'], unique=False)
    op.create_index(op.f('ix_client_nurturing_is_active'), 'client_nurturing', ['is_active'], unique=False)
    op.create_table('compliance_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brokerage_id', sa.Integer(), nullable=False),
    sa.Column('rule_name', sa.String(length=255), nullable=False),
    sa.Column('rule_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('conditions', sa.Text(), nullable=True),
    sa.Column('actions', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brokerage_id'], ['brokerages.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_compliance_rules_brokerage_id'), 'compliance_rules', ['brokerage_id'], unique=False)
    op.create_index(op.f('ix_compliance_rules_id'), 'compliance_rules', ['id'], unique=False)
    op.create_index(op.f('ix_compliance_rules_rule_type'), 'compliance_rules', ['rule_type'], unique=False)
    op.create_table('document_management',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.String(length=50), nullable=False),
    sa.Column('document_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('metadata_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_management_document_type'), 'document_management', ['document_type'], unique=False)
    op.create_index(op.f('ix_document_management_entity_id'), 'document_management', ['entity_id'], unique=False)
    op.create_index(op.f('ix_document_management_entity_type'), 'document_management', ['entity_type'], unique=False)
    op.create_index(op.f('ix_document_management_expiry_date'), 'document_management', ['expiry_date'], unique=False)
    op.create_index(op.f('ix_document_management_id'), 'document_management', ['id'], unique=False)
    op.create_index(op.f('ix_document_management_status'), 'document_management', ['status'], unique=False)
    op.create_table('knowledge_base',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brokerage_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brokerage_id'], ['brokerages.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_base_brokerage_id'), 'knowledge_base', ['brokerage_id'], unique=False)
    op.create_index(op.f('ix_knowledge_base_category'), 'knowledge_base', ['category'], unique=False)
    op.create_index(op.f('ix_knowledge_base_id'), 'knowledge_base', ['id'], unique=False)
    op.create_index(op.f('ix_knowledge_base_is_active'), 'knowledge_base', ['is_active'], unique=False)
    op.create_table('leads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('budget_min', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('budget_max', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('preferred_areas', sa.JSON(), nullable=True),
    sa.Column('property_type', sa.String(length=100), nullable=True),
    sa.Column('last_contacted', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('nurture_status', sa.String(length=20), nullable=True),
    sa.Column('assigned_agent_id', sa.Integer(), nullable=True),
    sa.Column('last_contacted_at', sa.DateTime(), nullable=True),
    sa.Column('next_follow_up_at', sa.DateTime(), nullable=True),
    sa.Column('lead_score', sa.Integer(), nullable=True),
    sa.Column('source_details', sa.JSON(), nullable=True),
    sa.Column('preferred_contact_method', sa.String(length=20), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language_preference', sa.String(length=10), nullable=True),
    sa.Column('urgency_level', sa.String(length=20), nullable=True),
    sa.Column('decision_timeline', sa.String(length=50), nullable=True),
    sa.Column('financing_status', sa.String(length=50), nullable=True),
    sa.Column('viewing_history', sa.JSON(), nullable=True),
    sa.Column('communication_preferences', sa.JSON(), nullable=True),
    sa.Column('lead_source_campaign', sa.String(length=100), nullable=True),
    sa.Column('lead_source_medium', sa.String(length=50), nullable=True),
    sa.Column('lead_source_content', sa.String(length=100), nullable=True),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['assigned_agent_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leads_assigned_agent_id'), 'leads', ['assigned_agent_id'], unique=False)
    op.create_index(op.f('ix_leads_email'), 'leads', ['email'], unique=False)
    op.create_index(op.f('ix_leads_id'), 'leads', ['id'], unique=False)
    op.create_index(op.f('ix_leads_last_contacted_at'), 'leads', ['last_contacted_at'], unique=False)
    op.create_index(op.f('ix_leads_lead_score'), 'leads', ['lead_score'], unique=False)
    op.create_index(op.f('ix_leads_next_follow_up_at'), 'leads', ['next_follow_up_at'], unique=False)
    op.create_index(op.f('ix_leads_nurture_status'), 'leads', ['nurture_status'], unique=False)
    op.create_index(op.f('ix_leads_phone'), 'leads', ['phone'], unique=False)
    op.create_index(op.f('ix_leads_status'), 'leads', ['status'], unique=False)
    op.create_index(op.f('ix_leads_urgency_level'), 'leads', ['urgency_level'], unique=False)
    op.create_table('team_performance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brokerage_id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('metric_value', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['brokerage_id'], ['brokerages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_performance_agent_id'), 'team_performance', ['agent_id'], unique=False)
    op.create_index(op.f('ix_team_performance_brokerage_id'), 'team_performance', ['brokerage_id'], unique=False)
    op.create_index(op.f('ix_team_performance_id'), 'team_performance', ['id'], unique=False)
    op.create_index(op.f('ix_team_performance_period_end'), 'team_performance', ['period_end'], unique=False)
    op.create_index(op.f('ix_team_performance_period_start'), 'team_performance', ['period_start'], unique=False)
    op.create_table('workflow_automation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brokerage_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('trigger_type', sa.String(length=50), nullable=False),
    sa.Column('conditions', sa.Text(), nullable=True),
    sa.Column('actions', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brokerage_id'], ['brokerages.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_automation_brokerage_id'), 'workflow_automation', ['brokerage_id'], unique=False)
    op.create_index(op.f('ix_workflow_automation_id'), 'workflow_automation', ['id'], unique=False)
    op.create_index(op.f('ix_workflow_automation_is_active'), 'workflow_automation', ['is_active'], unique=False)
    op.create_index(op.f('ix_workflow_automation_trigger_type'), 'workflow_automation', ['trigger_type'], unique=False)
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('budget_min', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('budget_max', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('preferred_location', sa.String(length=255), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('client_type', sa.String(length=20), nullable=True),
    sa.Column('lead_id', sa.Integer(), nullable=True),
    sa.Column('assigned_agent_id', sa.Integer(), nullable=True),
    sa.Column('client_status', sa.String(length=20), nullable=True),
    sa.Column('relationship_start_date', sa.Date(), nullable=True),
    sa.Column('total_transactions', sa.Integer(), nullable=True),
    sa.Column('total_value', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('client_tier', sa.String(length=20), nullable=True),
    sa.Column('referral_source', sa.String(length=100), nullable=True),
    sa.Column('communication_history', sa.JSON(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('documents', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_agent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_assigned_agent_id'), 'clients', ['assigned_agent_id'], unique=False)
    op.create_index(op.f('ix_clients_client_status'), 'clients', ['client_status'], unique=False)
    op.create_index(op.f('ix_clients_client_tier'), 'clients', ['client_tier'], unique=False)
    op.create_index(op.f('ix_clients_client_type'), 'clients', ['client_type'], unique=False)
    op.create_index(op.f('ix_clients_email'), 'clients', ['email'], unique=False)
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_index(op.f('ix_clients_lead_id'), 'clients', ['lead_id'], unique=False)
    op.create_index(op.f('ix_clients_phone'), 'clients', ['phone'], unique=False)
    op.create_table('property_viewings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('lead_id', sa.Integer(), nullable=True),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('viewing_date', sa.DateTime(), nullable=False),
    sa.Column('viewing_status', sa.String(length=20), nullable=True),
    sa.Column('viewing_type', sa.String(length=20), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('interest_level', sa.Integer(), nullable=True),
    sa.Column('follow_up_required', sa.Boolean(), nullable=True),
    sa.Column('follow_up_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_property_viewings_agent_id'), 'property_viewings', ['agent_id'], unique=False)
    op.create_index(op.f('ix_property_viewings_id'), 'property_viewings', ['id'], unique=False)
    op.create_index(op.f('ix_property_viewings_lead_id'), 'property_viewings', ['lead_id'], unique=False)
    op.create_index(op.f('ix_property_viewings_property_id'), 'property_viewings', ['property_id'], unique=False)
    op.create_index(op.f('ix_property_viewings_viewing_date'), 'property_viewings', ['viewing_date'], unique=False)
    op.create_index(op.f('ix_property_viewings_viewing_status'), 'property_viewings', ['viewing_status'], unique=False)
    op.create_table('rera_compliance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('compliance_status', sa.String(length=20), nullable=True),
    sa.Column('rera_number', sa.String(length=50), nullable=True),
    sa.Column('compliance_check_date', sa.Date(), nullable=True),
    sa.Column('compliance_notes', sa.Text(), nullable=True),
    sa.Column('required_actions', sa.JSON(), nullable=True),
    sa.Column('compliance_officer', sa.String(length=255), nullable=True),
    sa.Column('next_review_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rera_compliance_compliance_status'), 'rera_compliance', ['compliance_status'], unique=False)
    op.create_index(op.f('ix_rera_compliance_id'), 'rera_compliance', ['id'], unique=False)
    op.create_index(op.f('ix_rera_compliance_next_review_date'), 'rera_compliance', ['next_review_date'], unique=False)
    op.create_index(op.f('ix_rera_compliance_property_id'), 'rera_compliance', ['property_id'], unique=False)
    op.create_table('workflow_efficiency_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brokerage_id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('efficiency_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('time_saved', sa.Integer(), nullable=True),
    sa.Column('automation_rate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('period_start', sa.Date(), nullable=True),
    sa.Column('period_end', sa.Date(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brokerage_id'], ['brokerages.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflow_automation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_efficiency_metrics_brokerage_id'), 'workflow_efficiency_metrics', ['brokerage_id'], unique=False)
    op.create_index(op.f('ix_workflow_efficiency_metrics_id'), 'workflow_efficiency_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_workflow_efficiency_metrics_workflow_id'), 'workflow_efficiency_metrics', ['workflow_id'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('lead_id', sa.Integer(), nullable=True),
    sa.Column('appointment_type', sa.String(length=50), nullable=False),
    sa.Column('appointment_date', sa.DateTime(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('meeting_link', sa.String(length=500), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('agenda', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('outcome', sa.Text(), nullable=True),
    sa.Column('follow_up_required', sa.Boolean(), nullable=True),
    sa.Column('follow_up_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_agent_id'), 'appointments', ['agent_id'], unique=False)
    op.create_index(op.f('ix_appointments_appointment_date'), 'appointments', ['appointment_date'], unique=False)
    op.create_index(op.f('ix_appointments_appointment_type'), 'appointments', ['appointment_type'], unique=False)
    op.create_index(op.f('ix_appointments_client_id'), 'appointments', ['client_id'], unique=False)
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.create_index(op.f('ix_appointments_lead_id'), 'appointments', ['lead_id'], unique=False)
    op.create_index(op.f('ix_appointments_status'), 'appointments', ['status'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('transaction_status', sa.String(length=20), nullable=True),
    sa.Column('offer_price', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('final_price', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('commission_rate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('commission_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('transaction_date', sa.Date(), nullable=True),
    sa.Column('closing_date', sa.Date(), nullable=True),
    sa.Column('contract_signed_date', sa.Date(), nullable=True),
    sa.Column('payment_terms', sa.JSON(), nullable=True),
    sa.Column('documents', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['buyer_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_agent_id'), 'transactions', ['agent_id'], unique=False)
    op.create_index(op.f('ix_transactions_buyer_id'), 'transactions', ['buyer_id'], unique=False)
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_index(op.f('ix_transactions_property_id'), 'transactions', ['property_id'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_date'), 'transactions', ['transaction_date'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_status'), 'transactions', ['transaction_status'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_type'), 'transactions', ['transaction_type'], unique=False)
    op.create_table('transaction_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('status_change', sa.String(length=50), nullable=False),
    sa.Column('previous_status', sa.String(length=20), nullable=True),
    sa.Column('new_status', sa.String(length=20), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=True),
    sa.Column('change_reason', sa.Text(), nullable=True),
    sa.Column('metadata_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_history_id'), 'transaction_history', ['id'], unique=False)
    op.create_index(op.f('ix_transaction_history_transaction_id'), 'transaction_history', ['transaction_id'], unique=False)
    op.alter_column('audit_logs', 'event_data',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('audit_logs', 'success',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('audit_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_event_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.drop_constraint(op.f('audit_logs_user_id_fkey'), 'audit_logs', type_='foreignkey')
    op.create_foreign_key(None, 'audit_logs', 'users', ['user_id'], ['id'])
    op.add_column('listing_history', sa.Column('metadata_json', sa.JSON(), nullable=True))
    op.alter_column('listing_history', 'metadata_json',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               postgresql_using='metadata_json::json')
    op.alter_column('listing_history', 'event_type',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('listing_history', 'old_value',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('listing_history', 'new_value',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('listing_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_listing_history_changed_by_agent_id'), 'listing_history', ['changed_by_agent_id'], unique=False)
    op.create_index(op.f('ix_listing_history_id'), 'listing_history', ['id'], unique=False)
    op.drop_constraint(op.f('listing_history_property_id_fkey'), 'listing_history', type_='foreignkey')
    op.drop_constraint(op.f('listing_history_changed_by_agent_id_fkey'), 'listing_history', type_='foreignkey')
    op.create_foreign_key(None, 'listing_history', 'users', ['changed_by_agent_id'], ['id'])
    op.create_foreign_key(None, 'listing_history', 'properties', ['property_id'], ['id'])
    op.alter_column('permissions', 'resource',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('ix_permissions_resource_action'), table_name='permissions')
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.add_column('properties', sa.Column('price_aed', sa.DECIMAL(precision=15, scale=2), nullable=True))
    op.add_column('properties', sa.Column('features', sa.JSON(), nullable=True))
    op.add_column('properties', sa.Column('is_deleted', sa.Boolean(), nullable=True))
    op.add_column('properties', sa.Column('market_data', sa.JSON(), nullable=True))
    op.add_column('properties', sa.Column('neighborhood_data', sa.JSON(), nullable=True))
    op.add_column('properties', sa.Column('property_images', sa.JSON(), nullable=True))
    op.add_column('properties', sa.Column('floor_plan_url', sa.String(length=500), nullable=True))
    op.add_column('properties', sa.Column('virtual_tour_url', sa.String(length=500), nullable=True))
    op.add_column('properties', sa.Column('rera_number', sa.String(length=50), nullable=True))
    op.add_column('properties', sa.Column('developer_name', sa.String(length=255), nullable=True))
    op.add_column('properties', sa.Column('completion_date', sa.Date(), nullable=True))
    op.add_column('properties', sa.Column('maintenance_fee', sa.DECIMAL(precision=10, scale=2), nullable=True))
    op.add_column('properties', sa.Column('parking_spaces', sa.Integer(), nullable=True))
    op.add_column('properties', sa.Column('balcony_area', sa.DECIMAL(precision=8, scale=2), nullable=True))
    op.add_column('properties', sa.Column('view_type', sa.String(length=100), nullable=True))
    op.add_column('properties', sa.Column('furnishing_status', sa.String(length=50), nullable=True))
    op.add_column('properties', sa.Column('pet_friendly', sa.Boolean(), nullable=True))
    op.add_column('properties', sa.Column('gym_available', sa.Boolean(), nullable=True))
    op.add_column('properties', sa.Column('pool_available', sa.Boolean(), nullable=True))
    op.add_column('properties', sa.Column('security_24_7', sa.Boolean(), nullable=True))
    op.add_column('properties', sa.Column('created_by', sa.Integer(), nullable=True))
    op.alter_column('properties', 'property_type',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('properties', 'price',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.DECIMAL(precision=15, scale=2),
               existing_nullable=True)
    op.alter_column('properties', 'area_sqft',
               existing_type=sa.INTEGER(),
               type_=sa.DECIMAL(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('properties', 'bathrooms',
               existing_type=sa.NUMERIC(precision=3, scale=1),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('properties', 'listing_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'draft'::character varying"))
    op.alter_column('properties', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('properties', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('ix_properties_price'), table_name='properties')
    op.drop_index(op.f('ix_properties_title'), table_name='properties')
    op.drop_index(op.f('ix_properties_type'), table_name='properties')
    op.create_index(op.f('ix_properties_developer_name'), 'properties', ['developer_name'], unique=False)
    op.create_index(op.f('ix_properties_id'), 'properties', ['id'], unique=False)
    op.create_index(op.f('ix_properties_is_deleted'), 'properties', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_properties_listing_status'), 'properties', ['listing_status'], unique=False)
    op.create_index(op.f('ix_properties_price_aed'), 'properties', ['price_aed'], unique=False)
    op.create_index(op.f('ix_properties_property_type'), 'properties', ['property_type'], unique=False)
    op.create_index(op.f('ix_properties_rera_number'), 'properties', ['rera_number'], unique=False)
    op.drop_constraint(op.f('properties_agent_id_fkey'), 'properties', type_='foreignkey')
    op.create_foreign_key(None, 'properties', 'users', ['created_by'], ['id'])
    op.create_foreign_key(None, 'properties', 'users', ['agent_id'], ['id'])
    op.add_column('property_confidential', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('property_confidential', 'owner_details',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True,
               postgresql_using='owner_details::json')
    op.alter_column('property_confidential', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('ix_property_confidential_property_id'), table_name='property_confidential')
    op.create_index(op.f('ix_property_confidential_id'), 'property_confidential', ['id'], unique=False)
    op.create_unique_constraint(None, 'property_confidential', ['property_id'])
    op.drop_constraint(op.f('property_confidential_property_id_fkey'), 'property_confidential', type_='foreignkey')
    op.create_foreign_key(None, 'property_confidential', 'properties', ['property_id'], ['id'])
    op.drop_constraint(op.f('role_permissions_permission_id_fkey'), 'role_permissions', type_='foreignkey')
    op.drop_constraint(op.f('role_permissions_role_id_fkey'), 'role_permissions', type_='foreignkey')
    op.create_foreign_key(None, 'role_permissions', 'roles', ['role_id'], ['id'])
    op.create_foreign_key(None, 'role_permissions', 'permissions', ['permission_id'], ['id'])
    op.drop_column('role_permissions', 'assigned_at')
    op.alter_column('roles', 'name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('roles', 'is_default',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('roles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.drop_constraint(op.f('user_roles_user_id_fkey'), 'user_roles', type_='foreignkey')
    op.drop_constraint(op.f('user_roles_role_id_fkey'), 'user_roles', type_='foreignkey')
    op.create_foreign_key(None, 'user_roles', 'roles', ['role_id'], ['id'])
    op.create_foreign_key(None, 'user_roles', 'users', ['user_id'], ['id'])
    op.drop_column('user_roles', 'assigned_at')
    op.alter_column('user_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_sessions', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.drop_index(op.f('ix_user_sessions_expires_at'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.drop_constraint(op.f('user_sessions_user_id_fkey'), 'user_sessions', type_='foreignkey')
    op.create_foreign_key(None, 'user_sessions', 'users', ['user_id'], ['id'])
    op.add_column('users', sa.Column('brokerage_id', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('email_verification_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('password_reset_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('password_reset_expires', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('failed_login_attempts', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('locked_until', sa.DateTime(), nullable=True))
    op.alter_column('users', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('users', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'agent'::character varying"))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'email_verified',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.create_index(op.f('ix_users_brokerage_id'), 'users', ['brokerage_id'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_unique_constraint(None, 'users', ['email_verification_token'])
    op.create_unique_constraint(None, 'users', ['password_reset_token'])
    op.create_foreign_key(None, 'users', 'brokerages', ['brokerage_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_brokerage_id'), table_name='users')
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'email_verified',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'agent'::character varying"))
    op.alter_column('users', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('users', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_column('users', 'locked_until')
    op.drop_column('users', 'failed_login_attempts')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'password_reset_expires')
    op.drop_column('users', 'password_reset_token')
    op.drop_column('users', 'email_verification_token')
    op.drop_column('users', 'brokerage_id')
    op.drop_constraint(None, 'user_sessions', type_='foreignkey')
    op.create_foreign_key(op.f('user_sessions_user_id_fkey'), 'user_sessions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_expires_at'), 'user_sessions', ['expires_at'], unique=False)
    op.alter_column('user_sessions', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.alter_column('user_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.add_column('user_roles', sa.Column('assigned_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.create_foreign_key(op.f('user_roles_role_id_fkey'), 'user_roles', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('user_roles_user_id_fkey'), 'user_roles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.alter_column('roles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('roles', 'is_default',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('roles', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.add_column('role_permissions', sa.Column('assigned_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'role_permissions', type_='foreignkey')
    op.drop_constraint(None, 'role_permissions', type_='foreignkey')
    op.create_foreign_key(op.f('role_permissions_role_id_fkey'), 'role_permissions', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('role_permissions_permission_id_fkey'), 'role_permissions', 'permissions', ['permission_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'property_confidential', type_='foreignkey')
    op.create_foreign_key(op.f('property_confidential_property_id_fkey'), 'property_confidential', 'properties', ['property_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'property_confidential', type_='unique')
    op.drop_index(op.f('ix_property_confidential_id'), table_name='property_confidential')
    op.create_index(op.f('ix_property_confidential_property_id'), 'property_confidential', ['property_id'], unique=False)
    op.alter_column('property_confidential', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('property_confidential', 'owner_details',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('property_confidential', 'updated_at')
    op.drop_constraint(None, 'properties', type_='foreignkey')
    op.drop_constraint(None, 'properties', type_='foreignkey')
    op.create_foreign_key(op.f('properties_agent_id_fkey'), 'properties', 'users', ['agent_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_properties_rera_number'), table_name='properties')
    op.drop_index(op.f('ix_properties_property_type'), table_name='properties')
    op.drop_index(op.f('ix_properties_price_aed'), table_name='properties')
    op.drop_index(op.f('ix_properties_listing_status'), table_name='properties')
    op.drop_index(op.f('ix_properties_is_deleted'), table_name='properties')
    op.drop_index(op.f('ix_properties_id'), table_name='properties')
    op.drop_index(op.f('ix_properties_developer_name'), table_name='properties')
    op.create_index(op.f('ix_properties_type'), 'properties', ['property_type'], unique=False)
    op.create_index(op.f('ix_properties_title'), 'properties', ['title'], unique=False)
    op.create_index(op.f('ix_properties_price'), 'properties', ['price'], unique=False)
    op.alter_column('properties', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('properties', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('properties', 'listing_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'draft'::character varying"))
    op.alter_column('properties', 'bathrooms',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=3, scale=1),
               existing_nullable=True)
    op.alter_column('properties', 'area_sqft',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('properties', 'price',
               existing_type=sa.DECIMAL(precision=15, scale=2),
               type_=sa.NUMERIC(precision=12, scale=2),
               existing_nullable=True)
    op.alter_column('properties', 'property_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.drop_column('properties', 'created_by')
    op.drop_column('properties', 'security_24_7')
    op.drop_column('properties', 'pool_available')
    op.drop_column('properties', 'gym_available')
    op.drop_column('properties', 'pet_friendly')
    op.drop_column('properties', 'furnishing_status')
    op.drop_column('properties', 'view_type')
    op.drop_column('properties', 'balcony_area')
    op.drop_column('properties', 'parking_spaces')
    op.drop_column('properties', 'maintenance_fee')
    op.drop_column('properties', 'completion_date')
    op.drop_column('properties', 'developer_name')
    op.drop_column('properties', 'rera_number')
    op.drop_column('properties', 'virtual_tour_url')
    op.drop_column('properties', 'floor_plan_url')
    op.drop_column('properties', 'property_images')
    op.drop_column('properties', 'neighborhood_data')
    op.drop_column('properties', 'market_data')
    op.drop_column('properties', 'is_deleted')
    op.drop_column('properties', 'features')
    op.drop_column('properties', 'price_aed')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.create_index(op.f('ix_permissions_resource_action'), 'permissions', ['resource', 'action'], unique=False)
    op.alter_column('permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('permissions', 'resource',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_constraint(None, 'listing_history', type_='foreignkey')
    op.drop_constraint(None, 'listing_history', type_='foreignkey')
    op.create_foreign_key(op.f('listing_history_changed_by_agent_id_fkey'), 'listing_history', 'users', ['changed_by_agent_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(op.f('listing_history_property_id_fkey'), 'listing_history', 'properties', ['property_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_listing_history_id'), table_name='listing_history')
    op.drop_index(op.f('ix_listing_history_changed_by_agent_id'), table_name='listing_history')
    op.alter_column('listing_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('listing_history', 'new_value',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('listing_history', 'old_value',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('listing_history', 'event_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('listing_history', 'metadata_json')
    op.drop_constraint(None, 'audit_logs', type_='foreignkey')
    op.create_foreign_key(op.f('audit_logs_user_id_fkey'), 'audit_logs', 'users', ['user_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_event_type'), 'audit_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.alter_column('audit_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('audit_logs', 'success',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('audit_logs', 'event_data',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.drop_index(op.f('ix_transaction_history_transaction_id'), table_name='transaction_history')
    op.drop_index(op.f('ix_transaction_history_id'), table_name='transaction_history')
    op.drop_table('transaction_history')
    op.drop_index(op.f('ix_transactions_transaction_type'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_transaction_status'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_transaction_date'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_property_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_buyer_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_agent_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_appointments_status'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_lead_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_client_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_appointment_type'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_appointment_date'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_agent_id'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_workflow_efficiency_metrics_workflow_id'), table_name='workflow_efficiency_metrics')
    op.drop_index(op.f('ix_workflow_efficiency_metrics_id'), table_name='workflow_efficiency_metrics')
    op.drop_index(op.f('ix_workflow_efficiency_metrics_brokerage_id'), table_name='workflow_efficiency_metrics')
    op.drop_table('workflow_efficiency_metrics')
    op.drop_index(op.f('ix_rera_compliance_property_id'), table_name='rera_compliance')
    op.drop_index(op.f('ix_rera_compliance_next_review_date'), table_name='rera_compliance')
    op.drop_index(op.f('ix_rera_compliance_id'), table_name='rera_compliance')
    op.drop_index(op.f('ix_rera_compliance_compliance_status'), table_name='rera_compliance')
    op.drop_table('rera_compliance')
    op.drop_index(op.f('ix_property_viewings_viewing_status'), table_name='property_viewings')
    op.drop_index(op.f('ix_property_viewings_viewing_date'), table_name='property_viewings')
    op.drop_index(op.f('ix_property_viewings_property_id'), table_name='property_viewings')
    op.drop_index(op.f('ix_property_viewings_lead_id'), table_name='property_viewings')
    op.drop_index(op.f('ix_property_viewings_id'), table_name='property_viewings')
    op.drop_index(op.f('ix_property_viewings_agent_id'), table_name='property_viewings')
    op.drop_table('property_viewings')
    op.drop_index(op.f('ix_clients_phone'), table_name='clients')
    op.drop_index(op.f('ix_clients_lead_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_email'), table_name='clients')
    op.drop_index(op.f('ix_clients_client_type'), table_name='clients')
    op.drop_index(op.f('ix_clients_client_tier'), table_name='clients')
    op.drop_index(op.f('ix_clients_client_status'), table_name='clients')
    op.drop_index(op.f('ix_clients_assigned_agent_id'), table_name='clients')
    op.drop_table('clients')
    op.drop_index(op.f('ix_workflow_automation_trigger_type'), table_name='workflow_automation')
    op.drop_index(op.f('ix_workflow_automation_is_active'), table_name='workflow_automation')
    op.drop_index(op.f('ix_workflow_automation_id'), table_name='workflow_automation')
    op.drop_index(op.f('ix_workflow_automation_brokerage_id'), table_name='workflow_automation')
    op.drop_table('workflow_automation')
    op.drop_index(op.f('ix_team_performance_period_start'), table_name='team_performance')
    op.drop_index(op.f('ix_team_performance_period_end'), table_name='team_performance')
    op.drop_index(op.f('ix_team_performance_id'), table_name='team_performance')
    op.drop_index(op.f('ix_team_performance_brokerage_id'), table_name='team_performance')
    op.drop_index(op.f('ix_team_performance_agent_id'), table_name='team_performance')
    op.drop_table('team_performance')
    op.drop_index(op.f('ix_leads_urgency_level'), table_name='leads')
    op.drop_index(op.f('ix_leads_status'), table_name='leads')
    op.drop_index(op.f('ix_leads_phone'), table_name='leads')
    op.drop_index(op.f('ix_leads_nurture_status'), table_name='leads')
    op.drop_index(op.f('ix_leads_next_follow_up_at'), table_name='leads')
    op.drop_index(op.f('ix_leads_lead_score'), table_name='leads')
    op.drop_index(op.f('ix_leads_last_contacted_at'), table_name='leads')
    op.drop_index(op.f('ix_leads_id'), table_name='leads')
    op.drop_index(op.f('ix_leads_email'), table_name='leads')
    op.drop_index(op.f('ix_leads_assigned_agent_id'), table_name='leads')
    op.drop_table('leads')
    op.drop_index(op.f('ix_knowledge_base_is_active'), table_name='knowledge_base')
    op.drop_index(op.f('ix_knowledge_base_id'), table_name='knowledge_base')
    op.drop_index(op.f('ix_knowledge_base_category'), table_name='knowledge_base')
    op.drop_index(op.f('ix_knowledge_base_brokerage_id'), table_name='knowledge_base')
    op.drop_table('knowledge_base')
    op.drop_index(op.f('ix_document_management_status'), table_name='document_management')
    op.drop_index(op.f('ix_document_management_id'), table_name='document_management')
    op.drop_index(op.f('ix_document_management_expiry_date'), table_name='document_management')
    op.drop_index(op.f('ix_document_management_entity_type'), table_name='document_management')
    op.drop_index(op.f('ix_document_management_entity_id'), table_name='document_management')
    op.drop_index(op.f('ix_document_management_document_type'), table_name='document_management')
    op.drop_table('document_management')
    op.drop_index(op.f('ix_compliance_rules_rule_type'), table_name='compliance_rules')
    op.drop_index(op.f('ix_compliance_rules_id'), table_name='compliance_rules')
    op.drop_index(op.f('ix_compliance_rules_brokerage_id'), table_name='compliance_rules')
    op.drop_table('compliance_rules')
    op.drop_index(op.f('ix_client_nurturing_is_active'), table_name='client_nurturing')
    op.drop_index(op.f('ix_client_nurturing_id'), table_name='client_nurturing')
    op.drop_index(op.f('ix_client_nurturing_brokerage_id'), table_name='client_nurturing')
    op.drop_table('client_nurturing')
    op.drop_index(op.f('ix_agent_consistency_metrics_period'), table_name='agent_consistency_metrics')
    op.drop_index(op.f('ix_agent_consistency_metrics_id'), table_name='agent_consistency_metrics')
    op.drop_index(op.f('ix_agent_consistency_metrics_brokerage_id'), table_name='agent_consistency_metrics')
    op.drop_index(op.f('ix_agent_consistency_metrics_agent_id'), table_name='agent_consistency_metrics')
    op.drop_table('agent_consistency_metrics')
    op.drop_index(op.f('ix_lead_retention_analytics_id'), table_name='lead_retention_analytics')
    op.drop_index(op.f('ix_lead_retention_analytics_brokerage_id'), table_name='lead_retention_analytics')
    op.drop_table('lead_retention_analytics')
    op.drop_index(op.f('ix_brand_assets_id'), table_name='brand_assets')
    op.drop_index(op.f('ix_brand_assets_brokerage_id'), table_name='brand_assets')
    op.drop_index(op.f('ix_brand_assets_asset_type'), table_name='brand_assets')
    op.drop_table('brand_assets')
    op.drop_index(op.f('ix_neighborhood_profiles_investment_potential'), table_name='neighborhood_profiles')
    op.drop_index(op.f('ix_neighborhood_profiles_id'), table_name='neighborhood_profiles')
    op.drop_index(op.f('ix_neighborhood_profiles_area_name'), table_name='neighborhood_profiles')
    op.drop_table('neighborhood_profiles')
    op.drop_index(op.f('ix_market_data_property_type'), table_name='market_data')
    op.drop_index(op.f('ix_market_data_market_trend'), table_name='market_data')
    op.drop_index(op.f('ix_market_data_id'), table_name='market_data')
    op.drop_index(op.f('ix_market_data_data_date'), table_name='market_data')
    op.drop_index(op.f('ix_market_data_area'), table_name='market_data')
    op.drop_table('market_data')
    op.drop_index(op.f('ix_brokerages_name'), table_name='brokerages')
    op.drop_index(op.f('ix_brokerages_license_number'), table_name='brokerages')
    op.drop_index(op.f('ix_brokerages_is_active'), table_name='brokerages')
    op.drop_index(op.f('ix_brokerages_id'), table_name='brokerages')
    op.drop_table('brokerages')
    # ### end Alembic commands ###
