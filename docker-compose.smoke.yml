services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: real_estate_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - ./backend/app/infrastructure/db/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - smoke-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d real_estate_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass redis123
    environment:
      REDIS_PASSWORD: redis123
    ports:
      - "6379:6379"
    networks:
      - smoke-net
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    environment:
      DATABASE_URL: postgresql://admin:password123@db:5432/real_estate_db
      POSTGRES_DB: real_estate_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      REDIS_URL: redis://:redis123@redis:6379/0
      REDIS_HOST: redis
      REDIS_PORT: 6379
      GOOGLE_API_KEY: dummy-key
      OPENAI_API_KEY: dummy-key
      SECRET_KEY: local-secret
      JWT_SECRET: local-secret
      DEBUG: "true"
      ENVIRONMENT: development
      LOG_LEVEL: INFO
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - smoke-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.web-smoke
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "3000:80"
    networks:
      - smoke-net

networks:
  smoke-net:
    driver: bridge
