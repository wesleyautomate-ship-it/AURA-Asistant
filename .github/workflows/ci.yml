name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'tests/requirements-test.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install test tooling
        run: pip install -r tests/requirements-test.txt

      - name: Run pytest with coverage
        env:
          PYTHONPATH: backend/app
        run: |
          pytest --cov=backend.app --cov-report=xml --cov-report=html --cov-report=term

      - name: Upload pytest coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-coverage
          path: |
            coverage.xml
            htmlcov

  alembic-check:
    name: Alembic Dry Run
    runs-on: ubuntu-latest
    needs: backend-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Alembic upgrade dry run
        working-directory: backend/app
        run: alembic upgrade head --sql

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        working-directory: client
        run: npm install

      - name: Run web lint
        working-directory: client
        run: npm run lint:web

      - name: Type-check web client
        working-directory: client
        run: npm run typecheck:web

      - name: Build web client
        working-directory: client
        run: npm run build:web

      - name: Install Playwright browsers
        working-directory: client
        run: npx playwright install --with-deps

      - name: Seed sample property
        run: npm run seed:sample-property || true

      - name: Run web E2E smoke tests
        working-directory: client
        env:
          CI: true
          PLAYWRIGHT_HTML_REPORT: playwright-report
        run: npm run test:web -- --reporter=line --reporter=html

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: client/apps/web/playwright-report

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs:
      - backend-tests
      - alembic-check
      - frontend-build
    steps:
      - name: Report status
        run: |
          echo "Backend Tests: ${{ needs.backend-tests.result }}"
          echo "Alembic Dry Run: ${{ needs.alembic-check.result }}"
          echo "Frontend Build: ${{ needs.frontend-build.result }}"

