services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: real_estate_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/app/infrastructure/db/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - rag-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d real_estate_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ChromaDB for document embeddings
  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8002:8000"
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - rag-network

  # FastAPI Backend (SECURE VERSION)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.secure
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://admin:password123@postgres:5432/real_estate_db
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - REELLY_API_KEY=${REELLY_API_KEY}
    depends_on:
      - postgres
      - chromadb
      - redis
    volumes:
       - ./backend:/app
       - ./.env:/app/.env
    networks:
      - rag-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./client/apps/web
      dockerfile: ../../Dockerfile.web-smoke
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://backend:8001
    depends_on:
      - backend
    networks:
      - rag-network
    restart: unless-stopped

volumes:
  postgres_data:
  chroma_data:

networks:
  rag-network:
    driver: bridge
